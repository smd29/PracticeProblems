class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def printLinkedList(self,head):
        temp = head
        while temp:
            print(temp.data)
            temp = temp.next
    def insert_begining(self, new_data):
        new_node = Node(new_data)
        new_node.next = self.head
        self.head = new_node
    c = None
    def mergeLL(self,head1,head2):
        if head1 is None:
            return head2
        if head2 is None:
            return head1
        if head1.data <= head2.data:
            temp = head1
            temp.next = self.mergeLL(head1.next, head2)
        else:
            temp = head2
            temp.next = self.mergeLL(head1, head2.next)
        return temp

if __name__ == '__main__':
    # Start with the empty list
    llist1 = LinkedList()
    llist2 = LinkedList()
    llist1.insert_begining(19)
    llist1.insert_begining(7)
    llist1.insert_begining(5)
    llist1.insert_begining(1)
    llist2.insert_begining(10)
    llist2.insert_begining(6)
    llist2.insert_begining(2)
    print("The 1st Linked list is:")
    llist1.printLinkedList(llist1.head)
    print("The 2nd Linked list is:")
    llist2.printLinkedList(llist2.head)
    llist1.mergeLL(llist1.head,llist2.head)
    print("Merged List is: ")
    llist1.printLinkedList(llist1.head)

class Node:
    def __init__(self,data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def printLinkedList(self):
        temp = self.head
        while temp:
            print(temp.data)
            temp = temp.next

    def insert_begining(self,new_data):
        new_node = Node(new_data)
        new_node.next = self.head
        self.head = new_node

    def find_K_th(self,head,k):
        pointer1 = head
        pointer2 = head
        while k>0:
            pointer1 = pointer1.next
            k -= 1
        while pointer1:
            pointer1 = pointer1.next
            pointer2 = pointer2.next
        return pointer2.data
if __name__ == '__main__':
    # Start with the empty list
    llist = LinkedList()
    llist.insert_begining(4)
    llist.insert_begining(3)
    llist.insert_begining(2)
    llist.insert_begining(1)
    print("The Linked list is: \n")
    llist.printLinkedList()
    k = 3
    val = llist.find_K_th(llist.head,3)
    print(f"The {k}-th element from last is: {val}")

class Node:
    def __init__(self,data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def printLinkedList(self):
        temp = self.head
        while temp:
            print(temp.data)
            temp = temp.next

    def insert_begining(self,new_data):
        new_node = Node(new_data)
        new_node.next = self.head
        self.head = new_node

    def insert_middle(self,prev_node,new_data):
        if prev_node is None:
            print("Wrong!!, It is not LinkedList")
            return

        new_node = Node(new_data)
        new_node.next = prev_node.next
        prev_node.next = new_node

    def insert_last(self,new_data):
        new_node = Node(new_data)
        if self.head is None: #if linked List is empty
            self.head = new_node
            return
        last = self.head
        while last.next:
            last = last.next
        last.next = new_node


# Code execution starts here
if __name__ == '__main__':
    # Start with the empty list
    llist = LinkedList()

    # Insert 6.  So linked list becomes 6->None
    llist.insert_last(6)


    # Insert 7 at the beginning. So linked list becomes 7->6->None
    llist.insert_begining(7)

    # Insert 1 at the beginning. So linked list becomes 1->7->6->None
    llist.insert_begining(1)

    # Insert 4 at the end. So linked list becomes 1->7->6->4->None
    llist.insert_last(4)

    # Insert 8, after 7. So linked list becomes 1 -> 7-> 8-> 6-> 4-> None
    llist.insert_middle(llist.head.next,8)

    print("Created List is ")
    llist.printLinkedList()
